{"ast":null,"code":"import { map } from './map.js/index.js';\nlet _window = window,\n    AMap = _window.AMap;\n\nfunction getLngLat(searchT) {\n  let geocoder = new AMap.Geocoder({\n    city: '全国'\n  });\n  let pro = new Promise(function (resolve, reject) {\n    geocoder.getLocation(searchT, function (status, result) {\n      if (status === 'complete' && result.info === 'OK') {\n        let _result$geocodes$0$lo = result.geocodes[0].location,\n            lng = _result$geocodes$0$lo.lng,\n            lat = _result$geocodes$0$lo.lat;\n        let lnglat = [lng, lat];\n        console.log([lng, lat]);\n        resolve(lnglat);\n      } else {\n        reject(status);\n      }\n    });\n  });\n  return pro;\n}\n\nexport function addMarker(difang) {\n  let geocoder = new AMap.Geocoder({\n    city: '全国'\n  });\n  let pro = new Promise(function (resolve, reject) {\n    geocoder.getLocation(difang, function (status, result) {\n      if (status === 'complete' && result.info === 'OK') {\n        let _result$geocodes$0$lo2 = result.geocodes[0].location,\n            lng = _result$geocodes$0$lo2.lng,\n            lat = _result$geocodes$0$lo2.lat;\n        let city = result.geocodes[0].formattedAddress;\n        let marker = new AMap.Marker({\n          position: [lng, lat],\n          title: city\n        });\n        map.add(marker);\n        resolve([lng, lat]);\n      } else {\n        reject(status);\n      }\n    });\n  });\n  return pro;\n}\nexport default AMap;","map":{"version":3,"sources":["D:\\myproject\\react\\my-app\\src\\config.js"],"names":["map","window","AMap","getLngLat","searchT","geocoder","Geocoder","city","pro","Promise","resolve","reject","getLocation","status","result","info","geocodes","location","lng","lat","lnglat","console","log","addMarker","difang","formattedAddress","marker","Marker","position","title","add"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,mBAAlB;cAEcC,M;IAARC,I,WAAAA,I;;AAEN,SAASC,SAAT,CAAmBC,OAAnB,EAA2B;AAEvB,MAAIC,QAAQ,GAAG,IAAIH,IAAI,CAACI,QAAT,CAAkB;AAC7BC,IAAAA,IAAI,EAAC;AADwB,GAAlB,CAAf;AAIA,MAAIC,GAAG,GAAG,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAiBC,MAAjB,EAAwB;AAC1CN,IAAAA,QAAQ,CAACO,WAAT,CAAqBR,OAArB,EAA6B,UAASS,MAAT,EAAgBC,MAAhB,EAAuB;AAChD,UAAGD,MAAM,KAAG,UAAT,IAAuBC,MAAM,CAACC,IAAP,KAAc,IAAxC,EAA6C;AAAA,oCAC1BD,MAAM,CAACE,QAAP,CAAgB,CAAhB,EAAmBC,QADO;AAAA,YACpCC,GADoC,yBACpCA,GADoC;AAAA,YAChCC,GADgC,yBAChCA,GADgC;AAEzC,YAAIC,MAAM,GAAC,CAACF,GAAD,EAAKC,GAAL,CAAX;AAAqBE,QAAAA,OAAO,CAACC,GAAR,CAAY,CAACJ,GAAD,EAAKC,GAAL,CAAZ;AACrBT,QAAAA,OAAO,CAACU,MAAD,CAAP;AACH,OAJD,MAIK;AACDT,QAAAA,MAAM,CAACE,MAAD,CAAN;AACH;AACJ,KARD;AASH,GAVS,CAAV;AAYA,SAAOL,GAAP;AACH;;AAED,OAAO,SAASe,SAAT,CAAmBC,MAAnB,EAA0B;AAE7B,MAAInB,QAAQ,GAAG,IAAIH,IAAI,CAACI,QAAT,CAAkB;AAC7BC,IAAAA,IAAI,EAAC;AADwB,GAAlB,CAAf;AAIA,MAAIC,GAAG,GAAE,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAiBC,MAAjB,EAAwB;AAEzCN,IAAAA,QAAQ,CAACO,WAAT,CAAqBY,MAArB,EAA4B,UAASX,MAAT,EAAgBC,MAAhB,EAAuB;AAC/C,UAAGD,MAAM,KAAG,UAAT,IAAsBC,MAAM,CAACC,IAAP,KAAc,IAAvC,EAA4C;AAAA,qCACzBD,MAAM,CAACE,QAAP,CAAgB,CAAhB,EAAmBC,QADM;AAAA,YACnCC,GADmC,0BACnCA,GADmC;AAAA,YAC/BC,GAD+B,0BAC/BA,GAD+B;AAExC,YAAIZ,IAAI,GAAEO,MAAM,CAACE,QAAP,CAAgB,CAAhB,EAAmBS,gBAA7B;AACA,YAAIC,MAAM,GAAE,IAAIxB,IAAI,CAACyB,MAAT,CAAgB;AACxBC,UAAAA,QAAQ,EAAC,CAACV,GAAD,EAAKC,GAAL,CADe;AAExBU,UAAAA,KAAK,EAACtB;AAFkB,SAAhB,CAAZ;AAIAP,QAAAA,GAAG,CAAC8B,GAAJ,CAAQJ,MAAR;AACAhB,QAAAA,OAAO,CAAC,CAACQ,GAAD,EAAKC,GAAL,CAAD,CAAP;AACH,OATD,MASK;AACDR,QAAAA,MAAM,CAACE,MAAD,CAAN;AACH;AACJ,KAbD;AAcH,GAhBQ,CAAT;AAkBA,SAAOL,GAAP;AACH;AAED,eAAeN,IAAf","sourcesContent":["import {map} from './map.js/index.js'\r\n\r\nlet { AMap }= window\r\n\r\nfunction getLngLat(searchT){\r\n\r\n    let geocoder = new AMap.Geocoder({\r\n        city:'全国'\r\n    })\r\n\r\n    let pro = new Promise(function(resolve,reject){\r\n        geocoder.getLocation(searchT,function(status,result){\r\n            if(status==='complete' && result.info==='OK'){\r\n                let {lng,lat} =result.geocodes[0].location;\r\n                let lnglat=[lng,lat];console.log([lng,lat])\r\n                resolve(lnglat)    \r\n            }else{\r\n                reject(status)\r\n            }\r\n        })   \r\n    })\r\n\r\n    return pro\r\n}\r\n\r\nexport function addMarker(difang){\r\n\r\n    let geocoder = new AMap.Geocoder({\r\n        city:'全国'\r\n    })\r\n\r\n    let pro= new Promise(function(resolve,reject){\r\n        \r\n        geocoder.getLocation(difang,function(status,result){\r\n            if(status==='complete'&& result.info==='OK'){\r\n                let {lng,lat}= result.geocodes[0].location;\r\n                let city= result.geocodes[0].formattedAddress;\r\n                let marker= new AMap.Marker({\r\n                    position:[lng,lat],\r\n                    title:city \r\n                })\r\n                map.add(marker)\r\n                resolve([lng,lat])\r\n            }else{\r\n                reject(status)\r\n            }\r\n        })\r\n    })\r\n    \r\n    return pro\r\n}\r\n\r\nexport default AMap "]},"metadata":{},"sourceType":"module"}