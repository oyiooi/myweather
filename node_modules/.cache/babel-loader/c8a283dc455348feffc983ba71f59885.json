{"ast":null,"code":"var _jsxFileName = \"D:\\\\myproject\\\\react\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Weather from './weather';\nimport Search from './search';\nimport Location from './location';\nimport { tsConstructorType } from '@babel/types';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      locations: [{\n        city: 'xinjiang',\n        lngLat: [115, 45]\n      }],\n      weather: [{}]\n    };\n    this.addLocation = this.addLocation.bind(this);\n    this.addWeather = this.addWeather.bind(this);\n  }\n\n  toLeft() {\n    this.setState(prevState => {\n      let mid = prevState.weather.shift();\n      prevState.weather.push(mid);\n    });\n  }\n\n  toRight() {\n    this.setState(prevState => {\n      let mid = prevState.weather.pop();\n      prevState.weather.unshift(mid);\n    });\n  }\n\n  addWeather(lnglat) {\n    fetch(\"https://www.tianqiapi.com/api/?version=v6&city=\".concat(lnglat)).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState(preState => preState.weather.push(data));\n    }).catch(error => console.log(error));\n  }\n\n  addLocation(city) {\n    let loca = {\n      city: city\n    };\n    console.log(loca);\n    this.setState(preState => preState.locations.push(loca));\n  }\n\n  componentDidMount() {\n    let weather;\n    fetch('https://www.tianqiapi.com/api/?version=v6&city=新绛').then(response => {\n      return response.json();\n    }).then(data => {\n      weather = data;\n      console.log(weather);\n      this.setState({\n        weather: [weather]\n      });\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    const _this$state = this.state,\n          locations = _this$state.locations,\n          weather = _this$state.weather;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Weather, {\n        weather: weather,\n        toLeft: this.toLeft,\n        toRight: this.toRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search\",\n      render: () => React.createElement(Search, {\n        addLocation: this.addLocation,\n        addWeather: this.addWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/location\",\n      render: () => React.createElement(Location, {\n        locations: locations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\myproject\\react\\my-app\\src\\App.js"],"names":["React","Component","Route","Weather","Search","Location","tsConstructorType","App","constructor","state","locations","city","lngLat","weather","addLocation","bind","addWeather","toLeft","setState","prevState","mid","shift","push","toRight","pop","unshift","lnglat","fetch","then","response","json","data","preState","catch","error","console","log","loca","componentDidMount","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport { Route } from 'react-router-dom'\nimport Weather from './weather'\nimport Search from './search'\nimport Location from './location'\nimport { tsConstructorType } from '@babel/types';\n\nclass App extends Component {\n  \n  constructor(){\n    super()\n    this.state={\n      locations:[{city:'xinjiang',lngLat:[115,45]}],\n      weather:[{}]\n    }\n    this.addLocation=this.addLocation.bind(this)\n    this.addWeather=this.addWeather.bind(this)\n  }\n\n  toLeft(){\n    this.setState((prevState)=>{\n      let mid = prevState.weather.shift()\n      prevState.weather.push(mid)\n    })\n  }\n\n  toRight(){\n    this.setState((prevState)=>{\n      let mid = prevState.weather.pop()\n      prevState.weather.unshift(mid)\n    })\n  }\n\n  addWeather(lnglat){\n      fetch(`https://www.tianqiapi.com/api/?version=v6&city=${lnglat}`)\n           .then((response)=>{return response.json()})\n           .then(data=>{this.setState((preState)=>(preState.weather.push(data)))})\n           .catch(error=>console.log(error))\n  }\n\n  addLocation(city){\n      let loca={city:city}\n      console.log(loca)\n      this.setState((preState)=>preState.locations.push(loca))\n  }\n\n  componentDidMount(){\n    let weather;\n    fetch('https://www.tianqiapi.com/api/?version=v6&city=新绛')\n    .then((response)=>{\n        return response.json()\n    })\n    .then((data)=>{\n        weather=data\n        console.log(weather)\n        this.setState({\n            weather:[weather]\n    })\n    })\n    .catch(error=>console.log(error))\n  }\n\n  render(){\n    const {locations , weather }=this.state\n    return (\n      <div className=\"App\">\n           <Route exact path='/' render={()=><Weather weather={weather} toLeft={this.toLeft} toRight={this.toRight}></Weather>}></Route>\n           <Route exact path='/search' render={()=><Search addLocation={this.addLocation} addWeather={this.addWeather}></Search>}></Route>\n           <Route exact path='/location' render={()=><Location locations={locations} ></Location>}></Route>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}